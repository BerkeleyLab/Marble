%!PS-Adobe-3.0 EPSF-3.0
%%Title: block_3.eps
%%Creator: XCircuit v3.9 rev73
%%CreationDate: Wed Nov 25 15:10:02 2020
%%Pages: 1
%%BoundingBox: 68 68 831 602
%%DocumentNeededResources: font Helvetica Helvetica-Bold Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def


%%EndSetup

%%Page: block_b 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1598 683 translate

0.824 0.706 0.549 scb
496 1.000 -800 624 -800 32 -208 32 -208 624 4 polygon
sce
(FPGA) {/Helvetica-Bold cf} 2 21 0.000 1.300 -504 328 label
0.824 0.706 0.549 scb
496 1.000 -800 912 -800 752 -512 752 -512 912 4 polygon
sce
(DDR3) {/Helvetica-Bold cf} 2 21 0.000 1.100 -656 864 label
0.361 0.675 0.933 scb
497 1.000 -656 752 -624 720 -640 720 -640 656 -624 656 -656 624 -688 656 -672 
656 -672 720 -688 720 -656 752 11 polygon
0.824 0.706 0.549 scb
496 1.000 -448 880 -448 752 -256 752 -256 880 4 polygon
sce
(Flash) {/Helvetica-Bold cf} 2 21 0.000 1.100 -352 800 label
(Boot) {/Helvetica-Bold cf} 2 21 0.000 1.100 -352 848 label
0.361 0.675 0.933 scb
497 1.000 -352 752 -320 720 -336 720 -336 656 -320 656 -352 624 -384 656 -368 
656 -368 720 -384 720 -352 752 11 polygon
sce
(LPC + HPC FMC) {/Helvetica-Bold cf} 2 20 0.000 1.100 -32 464 label
0.824 0.706 0.549 scb
496 1.000 320 272 320 176 608 176 608 272 4 polygon
0.361 0.675 0.933 scb
497 1.000 -176 192 -208 160 -176 128 -176 144 -16 144 -16 128 16 160 -16 192 
-16 176 -176 176 -176 192 11 polygon
sce
(4 x MGT) {/Helvetica-Bold cf} 2 21 0.000 0.600 -96 160 label
0.361 0.675 0.933 scb
497 1.000 -240 -64 -272 -96 -240 -128 -240 -112 -80 -112 -80 -128 -48 -96 -80 
-64 -80 -80 -240 -80 -240 -64 11 polygon
497 1.000 -240 -144 -272 -176 -240 -208 -240 -192 -80 -192 -80 -208 -48 -176 
-80 -144 -80 -160 -240 -160 -240 -144 11 polygon
sce
(5 x I2C) {/Helvetica-Bold cf} 2 21 0.000 0.600 -160 -96 label
(20 x GPIO) {/Helvetica-Bold cf} 2 21 0.000 0.600 -160 -176 label
3 1.000 -176 816 -256 816 2 polygon
(App) {/Helvetica-Bold cf} 2 20 0.000 0.750 -240 848 label
(Gold) {/Helvetica-Bold cf} 2 20 0.000 0.750 -240 784 label
0.824 0.706 0.549 scb
496 1.000 -1152 320 -1152 160 -928 160 -928 320 4 polygon
sce
(PHY) {/Helvetica-Bold cf} 2 21 0.000 1.100 -1040 208 label
0.361 0.675 0.933 scb
497 1.000 -896 272 -928 240 -896 208 -896 224 -832 224 -832 208 -800 240 -832 
272 -832 256 -896 256 -896 272 11 polygon
sce
(8P8C) {/Helvetica-Bold cf} 2 23 0.000 1.100 -1296 240 label
0.361 0.675 0.933 scb
497 1.000 -1072 160 -1040 128 -1056 128 -1056 -272 -832 -272 -832 -256 -800 
-288 -832 -320 -832 -304 -1088 -304 -1088 128 -1104 128 -1072 160 13 polygon
sce
(MDIO) {/Helvetica-Bold cf} 2 21 0.000 0.600 -976 -288 label
(GigE) {/Helvetica-Bold cf} 2 21 0.000 1.100 -1040 272 label
(RGMII) {/Helvetica-Bold cf} 2 21 0.000 0.600 -864 240 label
0.824 0.706 0.549 scb
496 1.000 -800 -160 -800 -320 -576 -320 -576 -160 4 polygon
sce
{/Helvetica cf} (m) {/Symbol cf} 3 21 0.000 1.100 -700 -246 label
0.361 0.675 0.933 scb
497 1.000 -712 32 -680 0 -696 0 -696 -128 -680 -128 -712 -160 -744 -128 -728 
-128 -728 0 -744 0 -712 32 11 polygon
sce
(SPI) {/Helvetica-Bold cf} 2 21 270.000 0.600 -712 -64 label
0.361 0.675 0.933 scb
497 1.000 -608 -80 -608 -48 -544 -48 -544 -32 -512 -64 -544 -96 -544 -80 -608 
-80 8 polygon
0.824 0.706 0.549 scb
497 1.000 -480 -80 32 0.000 360.000 xcarc
497 1.000 -464 -48 48 0.000 360.000 xcarc
497 1.000 -384 -64 64 0.000 360.000 xcarc
497 1.000 -464 -128 50 0.000 360.000 xcarc
497 1.000 -328 -128 50 0.000 360.000 xcarc
497 1.000 -416 -208 64 0.000 360.000 xcarc
497 1.000 -480 -208 48 0.000 360.000 xcarc
0.361 0.675 0.933 scb
497 1.000 -688 -320 -656 -352 -672 -352 -672 -416 -656 -416 -688 -448 -720 -416 
-704 -416 -704 -352 -720 -352 -688 -320 11 polygon
sce
(LEDs, buttons) {/Helvetica-Bold cf} 2 29 0.000 0.750 -672 -464 label
0.361 0.675 0.933 scb
497 1.000 -392 -272 -360 -304 -376 -304 -376 -368 -360 -368 -392 -400 -424 -368 
-408 -368 -408 -304 -424 -304 -392 -272 11 polygon
sce
(Power enable and monitor) {/Helvetica-Bold cf} 2 29 0.000 0.750 -392 -416 
label
0.824 0.706 0.549 scb
497 1.000 -328 -208 48 0.000 360.000 xcarc
497 1.000 -416 -112 32 0.000 360.000 xcarc
0.361 0.675 0.933 scb
497 1.000 -624 32 -592 0 -608 0 -608 -128 -592 -128 -624 -160 -656 -128 -640 
-128 -640 0 -656 0 -624 32 11 polygon
sce
(I2C) {/Helvetica-Bold cf} 2 21 0.000 0.600 -592 -64 label
(C) {/Helvetica-Bold cf} 2 21 0.000 1.100 -672 -240 label
0.361 0.675 0.933 scb
497 1.000 -176 296 -208 264 -176 232 -176 248 -112 248 -112 232 -80 264 -112 
296 -112 280 -176 280 -176 296 11 polygon
497 1.000 -176 456 -208 424 -176 392 -176 408 -112 408 -112 392 -80 424 -112 
456 -112 440 -176 440 -176 456 11 polygon
497 1.000 -1248 272 -1280 240 -1248 208 -1248 224 -1184 224 -1184 208 -1152 240 
-1184 272 -1184 256 -1248 256 -1248 272 11 polygon
0.824 0.706 0.549 scb
497 1.000 -976 -80 32 0.000 360.000 xcarc
497 1.000 -976 80 16 0.000 360.000 xcarc
496 1.000 -992 80 -992 -80 -960 -80 -960 80 4 polygon
1.000 0.000 0.000 scb
1 3.000 -976 48 -976 -80 2 polygon
497 1.000 -976 -80 16 0.000 360.000 xcarc
0.361 0.675 0.933 scb
497 1.000 -936 88 -960 64 -936 40 -936 56 -824 56 -824 40 -800 64 -824 88 -824 
72 -936 72 -936 88 11 polygon
497 1.000 -976 -112 -1008 -144 -992 -144 -992 -208 -832 -208 -832 -224 -800 
-192 -832 -160 -832 -176 -960 -176 -960 -144 -944 -144 -976 -112 13 polygon
sce
(I2C) {/Helvetica-Bold cf} 2 21 0.000 0.600 -928 -192 label
(master) {/Helvetica-Bold cf} 2 21 270.000 0.600 -496 -64 label
1 1.000 -776 -160 -776 16 2 polygon
1.000 0.000 -776 32 generic::arrowhead
(Reset) {/Helvetica-Bold cf} 2 17 270.000 0.600 -784 -64 label
0.824 0.706 0.549 scb
496 1.000 -1120 464 -1120 368 -928 368 -928 464 4 polygon
sce
(VCXO) {/Helvetica-Bold cf} 2 21 0.000 1.100 -1024 416 label
(White Rabbit Compatible) {/Helvetica-Bold cf} 2 17 0.000 0.750 -1024 480 label
0.361 0.675 0.933 scb
497 1.000 -896 448 -928 416 -896 384 -896 400 -832 400 -832 384 -800 416 -832 
448 -832 432 -896 432 -896 448 11 polygon
sce
1 4.000 -864 -32 24 135.000 405.000 xcarc
1 4.000 -864 0 -864 -32 2 polygon
1 1.000 -952 -32 -912 -32 2 polygon
1.000 90.000 -896 -32 generic::arrowhead
0.361 0.675 0.933 scb
497 1.000 -176 376 -208 344 -176 312 -176 328 -112 328 -112 312 -80 344 -112 
376 -112 360 -176 360 -176 376 11 polygon
497 1.000 -176 536 -208 504 -176 472 -176 488 -112 488 -112 472 -80 504 -112 
536 -112 520 -176 520 -176 536 11 polygon
sce
(2.5V b13) {/Helvetica-Bold cf} 2 23 0.000 0.600 -216 504 label
(2.5V b14) {/Helvetica-Bold cf} 2 23 0.000 0.600 -216 424 label
(2.5V b15) {/Helvetica-Bold cf} 2 23 0.000 0.600 -216 344 label
(1.5V b32, b33, b34) {/Helvetica-Bold cf} 2 29 0.000 0.600 -656 608 label
(b116) {/Helvetica-Bold cf} 2 23 0.000 0.600 -224 80 label
(Kintex) {/Helvetica-Bold cf} 2 21 0.000 1.300 -504 392 label
(FF676) {/Helvetica-Bold cf} 2 21 0.000 1.300 -504 264 label
(2.5V b16) {/Helvetica-Bold cf} 2 23 0.000 0.600 -216 264 label
1.000 1.000 1.000 scb
0 1.000 -384 208 -384 448 -624 448 -624 208 4 polygon
sce
(2 x Pmod) {/Helvetica-Bold cf} 2 20 0.000 1.100 -1136 568 label
1 2.000 -64 608 -48 592 -48 272 -64 256 4 polygon
(SO-DIMM) {/Helvetica-Bold cf} 2 21 0.000 1.100 -656 800 label
(Write-protect) {/Helvetica-Bold cf} 2 20 0.000 0.750 -256 704 label
1 1.000 -280 752 -280 728 2 polygon
1 1.000 -264 720 -280 688 -280 664 3 polygon
1 1.000 -272 672 -288 656 2 polygon
1 1.000 -280 724 4 0.000 360.000 xcarc
0.361 0.675 0.933 scb
497 1.000 -176 616 -208 584 -176 552 -176 568 -112 568 -112 552 -80 584 -112 
616 -112 600 -176 600 -176 616 11 polygon
sce
(2.5V b12) {/Helvetica-Bold cf} 2 23 0.000 0.600 -216 584 label
0.824 0.706 0.549 scb
497 1.000 -376 -160 48 0.000 360.000 xcarc
497 1.000 -336 -56 48 0.000 360.000 xcarc
sce
(I2C) {/Helvetica-Bold cf} 2 21 0.000 1.100 -392 -96 label
(Expan.) {/Helvetica-Bold cf} 2 21 0.000 1.100 -392 -160 label
(b115) {/Helvetica-Bold cf} 2 23 0.000 0.600 -224 160 label
0.361 0.675 0.933 scb
497 1.000 -176 112 -208 80 -176 48 -176 64 288 64 288 48 320 80 288 112 288 96 
-176 96 -176 112 11 polygon
sce
(4 x MGT) {/Helvetica-Bold cf} 2 21 0.000 0.600 -96 80 label
0.824 0.706 0.549 scb
496 1.000 16 288 16 128 192 128 192 288 4 polygon
496 1.000 320 128 320 32 608 32 608 128 4 polygon
0.361 0.675 0.933 scb
497 1.000 224 248 192 216 224 184 224 200 288 200 288 184 320 216 288 248 288 
232 224 232 224 248 11 polygon
497 1.000 136 385 104 416 72 384 89 385 89 321 73 320 104 289 135 320 120 320 
119 384 136 385 11 polygon
sce
(QSFP) {/Helvetica-Bold cf} 2 21 0.000 1.100 464 224 label
(QSFP) {/Helvetica-Bold cf} 2 21 0.000 1.100 464 80 label
(Crosspoint) {/Helvetica-Bold cf} 2 21 0.000 0.600 104 232 label
(Switch) {/Helvetica-Bold cf} 2 21 0.000 0.600 104 200 label
0.361 0.675 0.933 scb
497 1.000 -896 592 -928 560 -896 528 -896 544 -832 544 -832 528 -800 560 -832 
592 -832 576 -896 576 -896 592 11 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
